name: Deploy ADF

run-name: Deploy ADF to ${{ inputs.deploy_target || 'sbx' }}

on: 
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_target:
        description: environment name
        type: environment

env: 
  trigger_config: ./.deployment/config/${{inputs.deploy_target || 'sbx' }}/triggers.json
  deployment_params: .deployment/config/${{inputs.deploy_target || 'sbx' }}/parameters.json

jobs:
  deploy-adf:
    name: Deploy ADF to ${{inputs.deploy_target || 'sbx' }}
    runs-on: ubuntu-latest
    environment: ${{inputs.deploy_target || 'sbx' }}
    permissions:
      contents: read
      id-token: write

    steps:      
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with: 
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      - name: Install Node Modules
        run: |
          npm ci
          
      - name: Install Powershell Modules
        shell: pwsh
        run: |
          Install-Module -Name Az.DataFactory -f      

      - name: Export ARM Template
        run: |
          echo "Exporting ADF ARM template from sandbox"
          npm run start export ./src/adf ${{ vars.sbx_data_factory }} adf_export

      - name: Stop ADF triggers
        shell: pwsh
        run: ./.deployment/scripts/PrePostDeploymentScript.ps1 -ResourceGroupName ${{ vars.resource_group }} -DataFactoryName ${{ vars.data_factory }} -preDeployment $true -armTemplate './adf_export/ARMTemplateForFactory.json'        

      - name: Wait for running jobs
        shell: pwsh
        run: ./.deployment/scripts/WaitForRunningPipelinesToComplete.ps1 -ResourceGroupName ${{ vars.resource_group }} -DataFactoryName ${{ vars.data_factory }} 

      - name: Deploy ADF
        run: |           
          exportFolder="./adf_export"

          az deployment group create \
            --resource-group ${{ vars.resource_group }} \
            --template-file "$exportFolder/ARMTemplateForFactory.json" \
            --parameters @"${{ env.deployment_params }}"

      - name: Post deployment cleanup
        shell: pwsh
        run: ./.deployment/scripts/PrePostDeploymentScript.ps1 -ResourceGroupName ${{ vars.resource_group }} -DataFactoryName ${{ vars.data_factory }} -preDeployment $false

      - name: Restart Triggers
        shell: pwsh
        run: ./.deployment/scripts/ResetTriggers.ps1 -ResourceGroupName ${{ vars.resource_group }} -DataFactoryName ${{ vars.data_factory }} -TriggerConfig ${{ env.trigger_config}}



